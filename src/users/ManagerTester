package users;

import users.Manager;
import users.Student;
import users.Teacher;
import courses.Courses;
import additional.News;
import enums.ManagerType;

import java.util.Scanner;

public class ManagerTester {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Создание объекта Manager
        Manager manager = new Manager("admin", "1234", ManagerType.OR);
        
        boolean exit = false;
        while (!exit) {
            System.out.println("\n--- Меню менеджера ---");
            System.out.println("1. Добавить студента");
            System.out.println("2. Добавить преподавателя");
            System.out.println("3. Добавить курс");
            System.out.println("4. Назначить преподавателя на курс");
            System.out.println("5. Просмотреть студентов (по GPA)");
            System.out.println("6. Просмотреть преподавателей (в алфавитном порядке)");
            System.out.println("7. Добавить новость");
            System.out.println("8. Просмотреть новости");
            System.out.println("9. Выйти");
            System.out.print("Выберите действие: ");
            
            int choice = scanner.nextInt();
            scanner.nextLine(); // Очистка буфера
            
            switch (choice) {
                case 1:
                    // Добавление студента
                    System.out.print("Введите имя студента: ");
                    String studentName = scanner.nextLine();
                    System.out.print("Введите GPA студента: ");
                    double gpa = scanner.nextDouble();
                    Student student = new Student(studentName, gpa);
                    manager.addStudent(student);
                    break;

                case 2:
                    // Добавление преподавателя
                    System.out.print("Введите имя преподавателя: ");
                    String teacherName = scanner.nextLine();
                    Teacher teacher = new Teacher(teacherName);
                    manager.addTeacher(teacher);
                    break;

                case 3:
                    // Добавление курса
                    System.out.print("Введите название курса: ");
                    String courseName = scanner.nextLine();
                    System.out.print("Введите специальность курса: ");
                    String major = scanner.nextLine();
                    System.out.print("Введите год курса: ");
                    int year = scanner.nextInt();
                    scanner.nextLine();
                    Courses course = new Courses(courseName, major, year, true);
                    manager.addCourseForRegistration(course, major, year);
                    break;

                case 4:
                    // Назначение преподавателя на курс
                    System.out.print("Введите имя преподавателя: ");
                    String tName = scanner.nextLine();
                    Teacher t = new Teacher(tName);
                    System.out.print("Введите название курса: ");
                    String cName = scanner.nextLine();
                    Courses c = new Courses(cName, "Default", 1, true);
                    manager.assignCourseToTeacher(c, t);
                    break;

                case 5:
                    // Просмотр студентов по GPA
                    manager.viewStudentsSortedByGpa();
                    break;

                case 6:
                    // Просмотр преподавателей в алфавитном порядке
                    manager.viewTeachersAlphabetically();
                    break;

                case 7:
                    // Добавление новости
                    System.out.print("Введите тему новости: ");
                    String theme = scanner.nextLine();
                    System.out.print("Введите текст новости: ");
                    String text = scanner.nextLine();
                    News news = new News(theme, text);
                    manager.addNews(news);
                    break;

                case 8:
                    // Просмотр новостей
                    manager.viewNews();
                    break;

                case 9:
                    // Выход
                    exit = true;
                    System.out.println("Выход из программы...");
                    break;

                default:
                    System.out.println("Неверный ввод, попробуйте снова.");
                    break;
            }
        }
        scanner.close();
    }
}
package users;

import users.Manager;
import users.Student;
import users.Teacher;
import courses.Courses;
import additional.News;
import enums.ManagerType;

import java.util.Scanner;

public class ManagerTester {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Создание объекта Manager
        Manager manager = new Manager("admin", "1234", ManagerType.OR);
        
        boolean exit = false;
        while (!exit) {
            System.out.println("\n--- Меню менеджера ---");
            System.out.println("1. Добавить студента");
            System.out.println("2. Добавить преподавателя");
            System.out.println("3. Добавить курс");
            System.out.println("4. Назначить преподавателя на курс");
            System.out.println("5. Просмотреть студентов (по GPA)");
            System.out.println("6. Просмотреть преподавателей (в алфавитном порядке)");
            System.out.println("7. Добавить новость");
            System.out.println("8. Просмотреть новости");
            System.out.println("9. Выйти");
            System.out.print("Выберите действие: ");
            
            int choice = scanner.nextInt();
            scanner.nextLine(); // Очистка буфера
            
            switch (choice) {
                case 1:
                    // Добавление студента
                    System.out.print("Введите имя студента: ");
                    String studentName = scanner.nextLine();
                    System.out.print("Введите GPA студента: ");
                    double gpa = scanner.nextDouble();
                    Student student = new Student(studentName, gpa);
                    manager.addStudent(student);
                    break;

                case 2:
                    // Добавление преподавателя
                    System.out.print("Введите имя преподавателя: ");
                    String teacherName = scanner.nextLine();
                    Teacher teacher = new Teacher(teacherName);
                    manager.addTeacher(teacher);
                    break;

                case 3:
                    // Добавление курса
                    System.out.print("Введите название курса: ");
                    String courseName = scanner.nextLine();
                    System.out.print("Введите специальность курса: ");
                    String major = scanner.nextLine();
                    System.out.print("Введите год курса: ");
                    int year = scanner.nextInt();
                    scanner.nextLine();
                    Courses course = new Courses(courseName, major, year, true);
                    manager.addCourseForRegistration(course, major, year);
                    break;

                case 4:
                    // Назначение преподавателя на курс
                    System.out.print("Введите имя преподавателя: ");
                    String tName = scanner.nextLine();
                    Teacher t = new Teacher(tName);
                    System.out.print("Введите название курса: ");
                    String cName = scanner.nextLine();
                    Courses c = new Courses(cName, "Default", 1, true);
                    manager.assignCourseToTeacher(c, t);
                    break;

                case 5:
                    // Просмотр студентов по GPA
                    manager.viewStudentsSortedByGpa();
                    break;

                case 6:
                    // Просмотр преподавателей в алфавитном порядке
                    manager.viewTeachersAlphabetically();
                    break;

                case 7:
                    // Добавление новости
                    System.out.print("Введите тему новости: ");
                    String theme = scanner.nextLine();
                    System.out.print("Введите текст новости: ");
                    String text = scanner.nextLine();
                    News news = new News(theme, text);
                    manager.addNews(news);
                    break;

                case 8:
                    // Просмотр новостей
                    manager.viewNews();
                    break;

                case 9:
                    // Выход
                    exit = true;
                    System.out.println("Выход из программы...");
                    break;

                default:
                    System.out.println("Неверный ввод, попробуйте снова.");
                    break;
            }
        }
        scanner.close();
    }
}
